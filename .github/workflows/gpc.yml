# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Build and Push Angular image to Google Cloud Platform

on:
  push:
    branches: [ main ]

jobs:
  build-push-gcr:
    name: Build and Push to GCP
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: vehicle-fe
      PROJECT_ID: vehicle-test-418415 # EZ A PROJECT ID A GCP-n
    steps:
    #checkout the repository
    - name: Checkout
      uses: actions/checkout@v3
    
    - name: 'Google Cloud Auth'
      uses: google-github-actions/auth@v1
      with:
        credentials_json: '${{ secrets.SERVICE_ACCOUNT_KEY }}'

        # Automatic Tagging of Release
    - name: Minor version for each merge
      id: taggerDryRun
      uses: anothrNick/github-tag-action@1.36.0
      env:
        GITHUB_TOKEN: ${{ secrets.SERVICE_ACCOUNT_KEY }}
        WITH_V: true
        DRY_RUN: true
    
    #Build docker image
    - name: Build Docker image
      run: docker build -t $IMAGE_NAME:latest .



    #Configure Docker client
    - name:  Configure Docker client
      run: gcloud auth configure-docker us-west2-docker.pkg.dev --quiet

    # gcloud auth configure-docker --quiet

    #TAGGER FINAL
    - name: Minor version for each merge
      id: taggerFinal
      uses: anothrNick/github-tag-action@1.36.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        WITH_V: true

    - name: Push Docker Image to Artifact Registry
      env:
        GIT_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
      run: |-
        docker tag $IMAGE_NAME:latest us-west2-docker.pkg.dev/$PROJECT_ID/images/$IMAGE_NAME:latest
        docker tag $IMAGE_NAME:latest us-west2-docker.pkg.dev/$PROJECT_ID/images/$IMAGE_NAME:$GIT_TAG
        docker push us-west2-docker.pkg.dev/$PROJECT_ID/images/$IMAGE_NAME:latest
        docker push us-west2-docker.pkg.dev/$PROJECT_ID/images/$IMAGE_NAME:$GIT_TAG
